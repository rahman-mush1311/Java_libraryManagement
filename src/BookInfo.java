/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mushfika
 */
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;

public class BookInfo extends javax.swing.JFrame {

    /**
     * Creates new form BookInfo
     */
    
Connection conn=null;
ResultSet rs = null;
PreparedStatement pst = null;
    public BookInfo() {
        initComponents();
        
         conn=Connect.ConnectDB();
         Create_table();
         //new MenuFrame().setVisible(false);
    }
    
    private void Update_table(String txt)
    {
           try{
        String sql = "select * from Books where BookId  = ' "+txt+" ' ";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        table_book.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        finally{
            
            try{
                rs.close();
                pst.close();
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }
   private void Create_table()
    {
        try{
        String sql = "select * from Books";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        table_book.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        finally{
            
            try{
                rs.close();
                pst.close();
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Label_BookId = new javax.swing.JLabel();
        Label_BookName = new javax.swing.JLabel();
        Label_AuthorName = new javax.swing.JLabel();
        Label_Subject = new javax.swing.JLabel();
        Label_Edition = new javax.swing.JLabel();
        txt_BookId = new javax.swing.JTextField();
        text_BookName = new javax.swing.JTextField();
        txt_AuthorName = new javax.swing.JTextField();
        txt_Edition = new javax.swing.JTextField();
        txt_Subject = new javax.swing.JTextField();
        Button_Save = new javax.swing.JButton();
        Button_Delete = new javax.swing.JButton();
        button_update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_book = new javax.swing.JTable();
        txt_search = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        button_search = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Label_BookId.setText("Book Id");

        Label_BookName.setText("Book Name");

        Label_AuthorName.setText("Author Name");

        Label_Subject.setText("Subject");

        Label_Edition.setText("Edition");

        Button_Save.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        Button_Save.setText("SAVE");
        Button_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_SaveActionPerformed(evt);
            }
        });

        Button_Delete.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        Button_Delete.setText("DELETE");
        Button_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_DeleteActionPerformed(evt);
            }
        });

        button_update.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        button_update.setText("UPDATE");
        button_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_updateActionPerformed(evt);
            }
        });

        table_book.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "BookId", "BookName", "AuthorName", "Subject", "Edition"
            }
        ));
        table_book.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_bookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_book);

        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Search");

        button_search.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        button_search.setText("SEARCH");
        button_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button_search))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Button_Save)
                                .addGap(18, 18, 18)
                                .addComponent(Button_Delete)
                                .addGap(18, 18, 18)
                                .addComponent(button_update))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Label_BookId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label_BookName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label_AuthorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label_Subject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label_Edition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_BookId, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(text_BookName)
                                    .addComponent(txt_AuthorName)
                                    .addComponent(txt_Subject)
                                    .addComponent(txt_Edition))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(button_search)
                        .addGap(11, 11, 11)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Label_BookId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_BookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Label_BookName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_BookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Label_AuthorName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_AuthorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Label_Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Label_Edition, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Edition, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button_Save)
                            .addComponent(Button_Delete)
                            .addComponent(button_update))
                        .addGap(39, 115, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_SaveActionPerformed
        
         
        try{
           String sql = "Insert into Books (BookId,BookName,AuthorName,Subject,Edition) values  (?,?,?,?,?)";
           
            pst = conn.prepareStatement(sql);
            pst.setString(1,txt_BookId.getText());
            pst.setString(2,text_BookName.getText());
            pst.setString(3,txt_AuthorName.getText());
            pst.setString(4,txt_Subject.getText());
            pst.setString(5,txt_Edition.getText());
            
           pst.execute();
            
                        txt_BookId.setText(null);
                        text_BookName.setText(null);
                        txt_AuthorName.setText(null);
                        txt_Subject.setText(null);
                        txt_Edition.setText(null);
                        
                        

                        JOptionPane.showMessageDialog(null ,"Saved");

            
        }
        catch(Exception e)
        {
                        txt_BookId.setText(null);
                        text_BookName.setText(null);
                        txt_AuthorName.setText(null);
                        txt_Subject.setText(null);
                        txt_Edition.setText(null);
            JOptionPane.showMessageDialog(null ,e);
        }
            finally{
            
            try{
                rs.close();
                pst.close();
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        Create_table();
    }//GEN-LAST:event_Button_SaveActionPerformed

    private void Button_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_DeleteActionPerformed
        
        String sql = "Delete from Books where BookId=?";
        
        try{
        pst=conn.prepareStatement(sql);
        pst.setString(1,txt_BookId.getText());
        pst.execute();
        
        JOptionPane.showMessageDialog(null ,"Deleted");
                         txt_BookId.setText(null);
                        text_BookName.setText(null);
                        txt_AuthorName.setText(null);
                        txt_Subject.setText(null);
                        txt_Edition.setText(null);
        }
        catch(Exception e)
        {
                         txt_BookId.setText(null);
                        text_BookName.setText(null);
                        txt_AuthorName.setText(null);
                        txt_Subject.setText(null);
                        txt_Edition.setText(null);
            JOptionPane.showMessageDialog(null, e);
        }
            finally{
            
            try{
                rs.close();
                pst.close();
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        Create_table();
    }//GEN-LAST:event_Button_DeleteActionPerformed

    private void table_bookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_bookMouseClicked
        
        try{
            
            int row = table_book.getSelectedRow();
            String Table_click=(table_book.getModel().getValueAt(row,0).toString());
            String sql = "select * from Books where BookId=' "+Table_click+" ' ";
             pst=conn.prepareStatement(sql);
              rs=pst.executeQuery();
              
              if(rs.next())
              {
                  String add1=rs.getString("BookId");
                  txt_BookId.setText(add1);
                  String add2=rs.getString("BookName");
                  text_BookName.setText(add2);
                  String add3=rs.getString("AuthorName");
                  txt_AuthorName.setText(add3);
                  String add4=rs.getString("Subject");
                  txt_Subject.setText(add4);
                  String add5=rs.getString("Edition");
                  txt_Edition.setText(add5);
              }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
           finally{
            
            try{
                rs.close();
                pst.close();
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_table_bookMouseClicked

    private void button_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_updateActionPerformed

        
        
        try{
            
            String Value1 = txt_BookId.getText();
            String Value2=text_BookName.getText();
            String Value3=txt_AuthorName.getText();
            String Value4=txt_Subject.getText();
            String Value5=txt_Edition.getText();

//String sql="update Books set BookId=' " +Value1+" ' , BookName=' " +Value2+" ', AuthorName=' " +Value3+" ', Subject=' " +Value4+" ', Edition=' " +Value5+" ' where BookId='"+Value1+" ' ";
String sql="update Books set BookName=' " +Value2+" ',Subject= ' "+Value4+" '  where BookId = ' "+Value1+" ' ";
              pst=conn.prepareStatement(sql);
            pst.execute();
            
                        txt_BookId.setText(null);
                        text_BookName.setText(null);
                        txt_AuthorName.setText(null);
                        txt_Subject.setText(null);
                        txt_Edition.setText(null);
              JOptionPane.showMessageDialog(null,"Updated");
        }
        catch(Exception e)
        {
                        txt_BookId.setText(null);
                        text_BookName.setText(null);
                        txt_AuthorName.setText(null);
                        txt_Subject.setText(null);
                        txt_Edition.setText(null);
            JOptionPane.showMessageDialog(null,e);
        }
        
         finally{
            
            try{
                rs.close();
                pst.close();
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        
        Create_table();
    }//GEN-LAST:event_button_updateActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        
   /*     try{
             String sql = "select * from Books where BookId=?";
                pst=conn.prepareStatement(sql);
                pst.setString(1,txt_search.getText());
              rs=pst.executeQuery();
              
              if(rs.next())
              {
                  String add1=rs.getString("BookId");
                  txt_BookId.setText(add1);
                  String add2=rs.getString("BookName");
                  text_BookName.setText(add2);
                  String add3=rs.getString("AuthorName");
                  txt_AuthorName.setText(add3);
                  String add4=rs.getString("Subject");
                  txt_Subject.setText(add4);
                  String add5=rs.getString("Edition");
                  txt_Edition.setText(add5);
              }
              
                  
        }
        catch(Exception e){
            
              JOptionPane.showMessageDialog(null,e);
        }
        
             try{
             String sql = "select * from Books where BookName=?";
                pst=conn.prepareStatement(sql);
                pst.setString(1,txt_search.getText());
              rs=pst.executeQuery();
              
              if(rs.next())
              {
                  String add1=rs.getString("BookId");
                  txt_BookId.setText(add1);
                  String add2=rs.getString("BookName");
                  text_BookName.setText(add2);
                  String add3=rs.getString("AuthorName");
                  txt_AuthorName.setText(add3);
                  String add4=rs.getString("Subject");
                  txt_Subject.setText(add4);
                  String add5=rs.getString("Edition");
                  txt_Edition.setText(add5);
              }
        }
        catch(Exception e){
            
              JOptionPane.showMessageDialog(null,e);
        }
             
                  try{
             String sql = "select * from Books where AuthorName=?";
                pst=conn.prepareStatement(sql);
                pst.setString(1,txt_search.getText());
              rs=pst.executeQuery();
              
              if(rs.next())
              {
                  String add1=rs.getString("BookId");
                  txt_BookId.setText(add1);
                  String add2=rs.getString("BookName");
                  text_BookName.setText(add2);
                  String add3=rs.getString("AuthorName");
                  txt_AuthorName.setText(add3);
                  String add4=rs.getString("Subject");
                  txt_Subject.setText(add4);
                  String add5=rs.getString("Edition");
                  txt_Edition.setText(add5);
              }
        }
        catch(Exception e){
            
              JOptionPane.showMessageDialog(null,e);
        }
                  try{
             String sql = "select * from Books where Subject=?";
                pst=conn.prepareStatement(sql);
                pst.setString(1,txt_search.getText());
              rs=pst.executeQuery();
              
              if(rs.next())
              {
                  String add1=rs.getString("BookId");
                  txt_BookId.setText(add1);
                  String add2=rs.getString("BookName");
                  text_BookName.setText(add2);
                  String add3=rs.getString("AuthorName");
                  txt_AuthorName.setText(add3);
                  String add4=rs.getString("Subject");
                  txt_Subject.setText(add4);
                  String add5=rs.getString("Edition");
                  txt_Edition.setText(add5);
              }
        }
        catch(Exception e){
            
              JOptionPane.showMessageDialog(null,e);
        }*/
    }//GEN-LAST:event_txt_searchKeyReleased

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchActionPerformed

    private void button_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_searchActionPerformed
           try{
              String txt = txt_search.getText();
             String sql = "select * from Books where BookId Like? ";
              pst=conn.prepareStatement(sql);
              pst.setString(1,txt_search.getText());
              rs=pst.executeQuery();
             
              if(rs.next())
              {
         
                Update_table(txt);
                txt_search.setText(null);
        }
              else
              {
                  JOptionPane.showMessageDialog(null,"Not Found");
              }
     }
        catch(Exception e){
            
              JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_button_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Delete;
    private javax.swing.JButton Button_Save;
    private javax.swing.JLabel Label_AuthorName;
    private javax.swing.JLabel Label_BookId;
    private javax.swing.JLabel Label_BookName;
    private javax.swing.JLabel Label_Edition;
    private javax.swing.JLabel Label_Subject;
    private javax.swing.JButton button_search;
    private javax.swing.JButton button_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_book;
    private javax.swing.JTextField text_BookName;
    private javax.swing.JTextField txt_AuthorName;
    private javax.swing.JTextField txt_BookId;
    private javax.swing.JTextField txt_Edition;
    private javax.swing.JTextField txt_Subject;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables
}
